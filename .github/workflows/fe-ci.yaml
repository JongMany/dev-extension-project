name: Dockerizing to Amazon ECR

on:
  push:
    branches: ["main"]
    paths:
      - "client/**"
  pull_request:
    branches: ["main"]
    paths:
      - "client/**"

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: study-log-client
  ECR_REGISTRY: 214925768882.dkr.ecr.ap-northeast-2.amazonaws.com

jobs:
  ci:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Config AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login To Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./server/Dockerfile.prod ./server
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Save image tag to file
        run: echo "${IMAGE_TAG}" > image-tag.txt

      - name: Verify image tag file
        run: cat image-tag.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: image-tag
          path: image-tag.txt
